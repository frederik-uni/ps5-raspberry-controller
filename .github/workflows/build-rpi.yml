name: Build for Raspberry Pi Zero (ARMv6)

on:
  push:
    branches:
      - master

jobs:
  cross-compile:
    name: Cross-Compile (no VM)
    runs-on: ubuntu-22.04

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Install Rust + ARM target
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          rustup target add arm-unknown-linux-gnueabihf

      - name: 🔧 Install ARM toolchain and dependencies
        run: |
          sudo dpkg --add-architecture armhf
          sudo bash -c 'cat > /etc/apt/sources.list <<EOF
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-updates main universe multiverse restricted
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy-security main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-updates main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy-security main universe multiverse restricted
          EOF'

          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf \
            libc6-dev-armhf-cross \
            pkg-config \
            build-essential \
            libdbus-1-dev:armhf \
            libudev-dev:armhf

      - name: 🚧 Build for Raspberry Pi Zero
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig
          PKG_CONFIG_SYSROOT_DIR: /
          RUSTFLAGS: "-C linker=arm-linux-gnueabihf-gcc -C target-cpu=arm1176jzf-s -C target-feature=-neon"
        run: |
          cargo build --release --target=arm-unknown-linux-gnueabihf

      - name: 📤 Upload Cross-Built Binary
        uses: actions/upload-artifact@v4
        with:
          name: rpi-cross-binary
          path: target/arm-unknown-linux-gnueabihf/release/bt_hid_gamepad

  qemu-native:
    name: Native ARMv6 build in QEMU container
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up QEMU for ARM emulation
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm

      - name: 🐳 Run ARMv6 container with QEMU
        uses: addnab/docker-run-action@v3
        with:
          image: balenalib/rpi-debian:bullseye
          options: >-
            --platform linux/arm/v6
            -v ${{ github.workspace }}:/github/workspace
            -w /github/workspace
          shell: bash
          run: |
            apt-get update
            apt-get install -y curl build-essential pkg-config libdbus-1-dev libudev-dev

            curl https://sh.rustup.rs -sSf | sh -s -- -y
            export PATH="$HOME/.cargo/bin:$PATH"
            rustup target add arm-unknown-linux-gnueabihf

            export PKG_CONFIG_ALLOW_CROSS=1
            export PKG_CONFIG_SYSROOT_DIR=/
            export PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig:/usr/share/pkgconfig
            export RUSTFLAGS="-C target-cpu=arm1176jzf-s -C target-feature=-neon"
            cargo build --release --target=arm-unknown-linux-gnueabihf

      - name: 📤 Upload Native-Built Binary
        uses: actions/upload-artifact@v4
        with:
          name: rpi-qemu-binary
          path: target/arm-unknown-linux-gnueabihf/release/bt_hid_gamepad
